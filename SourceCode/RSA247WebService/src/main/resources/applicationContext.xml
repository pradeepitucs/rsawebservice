<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/jdbc 
		http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security-3.1.xsd">


	<context:component-scan base-package="com.ucs.rsa" />

	<mvc:annotation-driven
		content-negotiation-manager="contentNegotiationManager" />

	<mvc:resources mapping="/resources/**" location="/resources/"
		cache-period="0" />

	<mvc:interceptors>
		<bean class="com.ucs.rsa.interceptor.DefaultInterceptor" />
	</mvc:interceptors>

	<bean id="contentNegotiationManager"
		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">

		<!-- https://dzone.com/articles/content-negotiation-using -->
		<property name="favorPathExtension" value="true" />
		<property name="ignoreAcceptHeader" value="true" />
		<property name="defaultContentType" value="text/html" />
		<property name="useJaf" value="false" />

		<property name="mediaTypes">
			<map>
				<entry key="html" value="text/html" />
				<entry key="json" value="application/json" />
				<entry key="xml" value="application/xml" />
			</map>
		</property>

	</bean>

	<!-- JAXB Marshalling classes -->
	<bean id="jaxbMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="classesToBeBound">
			<list>
				<value>com.ucs.rsa.common.dto.CityDTO</value>
				<value>com.ucs.rsa.common.dto.CitiesDTO</value>
				<value>com.ucs.rsa.common.dto.CustomerDTO</value>
				<value>com.ucs.rsa.common.dto.CustomersDTO</value>
				<value>com.ucs.rsa.common.dto.ExceptionDTO</value>
				<value>com.ucs.rsa.common.dto.RoleDTO</value>
				<value>com.ucs.rsa.common.dto.RolesDTO</value>
				<value>com.ucs.rsa.common.dto.StateDTO</value>
				<value>com.ucs.rsa.common.dto.StatesDTO</value>
				<value>com.ucs.rsa.common.dto.UserDTO</value>
				<value>com.ucs.rsa.common.dto.UsersDTO</value>
				<value>com.ucs.rsa.common.dto.UserVehicleDTO</value>
				<value>com.ucs.rsa.common.dto.UserVehiclesDTO</value>
				<value>com.ucs.rsa.common.dto.VehicleBodyTypeDTO</value>
				<value>com.ucs.rsa.common.dto.VehicleBodyTypesDTO</value>
				<value>com.ucs.rsa.common.dto.VehicleDTO</value>
				<value>com.ucs.rsa.common.dto.VehiclesDTO</value>
				<value>com.ucs.rsa.common.dto.VehicleFuelTypeDTO</value>
				<value>com.ucs.rsa.common.dto.VehicleFuelTypesDTO</value>
				<value>com.ucs.rsa.common.dto.VehicleManufacturerDTO</value>
				<value>com.ucs.rsa.common.dto.VehicleManufacturersDTO</value>
				<value>com.ucs.rsa.common.dto.VehicleInformationModelDTO</value>
				<value>com.ucs.rsa.common.dto.VehicleInformationModelsDTO</value>
				<value>com.ucs.rsa.common.dto.VehicleTypeDTO</value>
				<value>com.ucs.rsa.common.dto.VehicleTypesDTO</value>
				<value>com.ucs.rsa.common.dto.ServiceProviderDTO</value>
				<value>com.ucs.rsa.common.dto.ServiceProvidersDTO</value>
				<value>com.ucs.rsa.common.dto.ServiceTypeDTO</value>
				<value>com.ucs.rsa.common.dto.ServiceTypesDTO</value>
				<value>com.ucs.rsa.common.dto.CustomerRequestDTO</value>
				<value>com.ucs.rsa.common.dto.CustomerRequestsDTO</value>
				<value>com.ucs.rsa.common.dto.CustomerReviewDTO</value>
				<value>com.ucs.rsa.common.dto.CustomerReviewsDTO</value>
				<value>com.ucs.rsa.common.dto.EmployeeDTO</value>
				<value>com.ucs.rsa.common.dto.EmployeesDTO</value>
				<value>com.ucs.rsa.common.dto.StringDTO</value>
				<value>com.ucs.rsa.common.dto.StringBuilderDTO</value>
				<value>com.ucs.rsa.common.dto.PaymentDTO</value>
				<value>com.ucs.rsa.common.dto.EmployeeDashboard</value>
				<value>com.ucs.rsa.common.dto.CustomerServiceRequestDTO</value>
				<value>com.ucs.rsa.common.dto.CustomerServiceRequestsDTO</value>
			</list>
		</property>
	</bean>

	<!-- View Resolver -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">

		<property name="order" value="1" />
		<property name="contentNegotiationManager" ref="contentNegotiationManager" />

		<property name="defaultViews">
			<list>
				<bean id="JsonView"
					class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
					<property name="prettyPrint" value="true" />
				</bean>

				<!-- JAXB XML View -->
				<bean id="xmlView"
					class="org.springframework.web.servlet.view.xml.MarshallingView">
					<property name="marshaller" ref="jaxbMarshaller" />
				</bean>

			</list>
		</property>

		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
					<property name="order" value="2" />
				</bean>

				<bean id="tilesViewResolver"
					class="org.springframework.web.servlet.view.UrlBasedViewResolver">
					<property name="viewClass"
						value="org.springframework.web.servlet.view.tiles3.TilesView" />
					<property name="order" value="3" />
				</bean>

			</list>
		</property>

	</bean>

	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/views/**/tiles.xml</value>
				<value>/WEB-INF/views/**/views.xml</value>
			</list>
		</property>
	</bean>

	<!-- Internationalization (i18n) and Localization (i10n) -->
	<!-- http://stackoverflow.com/questions/37716007/spring-web-mvc-localization-display-kannada-error -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="defaultEncoding" value="UTF-8" />
		<property name="basename" value="/WEB-INF/resourcebundles/messages" />
	</bean>

	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />

	<bean id="localeChangeInterceptor"
		class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
		<property name="paramName" value="lang" />
	</bean>

	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		<property name="defaultLocale" value="en" />
	</bean>

	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<property name="interceptors">
			<list>
				<ref bean="localeChangeInterceptor" />
			</list>
		</property>
	</bean>

	<!-- Request Mapping Handler Mapping -->
	<bean id="handlerMapping"
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
		<property name="contentNegotiationManager" ref="contentNegotiationManager" />
		<!-- <property name="useSuffixPatternMatch" value="true" /> -->
	</bean>

	<!-- <bean id="dataSource" -->
	<!-- class="org.springframework.jdbc.datasource.DriverManagerDataSource"> -->
	<!-- <property name="driverClassName" value="com.mysql.jdbc.Driver" /> -->
	<!-- <property name="url" value="jdbc:mysql://localhost/mt2" /> -->
	<!-- <property name="username" value="root" /> -->
	<!-- <property name="password" value="root" /> -->
	<!-- </bean> -->

	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="java:comp/env/jdbc/MySQLDS" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>
				<value>com.ucs.rsa.model.CityModel</value>
				<value>com.ucs.rsa.model.CustomerModel</value>
				<value>com.ucs.rsa.model.RoleModel</value>
				<value>com.ucs.rsa.model.StateModel</value>
				<value>com.ucs.rsa.model.UserModel</value>
				<value>com.ucs.rsa.model.UserVehicleModel</value>
				<value>com.ucs.rsa.model.VehicleBodyTypeModel</value>
				<value>com.ucs.rsa.model.VehicleFuelTypeModel</value>
				<value>com.ucs.rsa.model.VehicleManufacturerModel</value>
				<value>com.ucs.rsa.model.VehicleModel</value>
				<value>com.ucs.rsa.model.VehicleInformationModel</value>
				<value>com.ucs.rsa.model.VehicleTypeModel</value>
				<value>com.ucs.rsa.model.ServiceProviderModel</value>
				<value>com.ucs.rsa.model.ServiceTypeModel</value>
				<value>com.ucs.rsa.model.CustomerRequestModel</value>
				<value>com.ucs.rsa.model.CustomerReviewModel</value>
				<value>com.ucs.rsa.model.EmployeeModel</value>
				<value>com.ucs.rsa.model.CustomerSubIssueModel</value>
				<value>com.ucs.rsa.model.ServiceProviderCommentModel</value>
				<value>com.ucs.rsa.model.ServiceProviderServiceMatchingModel</value>
				<value>com.ucs.rsa.model.PaymentModel</value>
				<value>com.ucs.rsa.model.IssuePaymentModel</value>
				<value>com.ucs.rsa.model.CustomerPaymentModel</value>
				<value>com.ucs.rsa.model.AdminModel</value>
				<value>com.ucs.rsa.model.ServiceProviderServicePriceModel</value>
				<value>com.ucs.rsa.model.CustomerServiceRequestModel</value>
				<value>com.ucs.rsa.model.VehicleServiceTypeModel</value>
			</list>
		</property>
		<property name="configLocation" value="classpath:hibernate.cfg.xml" />
	</bean>

	<tx:annotation-driven />

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- Resolvers -->
	<bean id="ResponseExceptionResolver"
		class="org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver">
		<property name="order">
			<value>1</value>
		</property>
	</bean>
	<bean id="RSAExceptionResolver" class="com.ucs.rsa.web.resolver.RSAExceptionResolver">
		<property name="order">
			<value>2</value>
		</property>
	</bean>

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		p:defaultEncoding="utf-8">
		<property name="maxUploadSize" value="50000000" />
	</bean>

	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<!-- Need to add username and password RSA Admin -->
		<property name="username" value="gururaj.m@ucs.consulting" />
		<property name="password" value="ucspune123" />

		<property name="javaMailProperties">
			<props>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.debug">true</prop>
			</props>
		</property>
	</bean>

	<!-- define the security for the static resources inside the folder /resources 
		@see servlet-context.xml -->
	<sec:http pattern="/resources/**" security="none" />

	<!-- define the security for the webapp -->
	<sec:http use-expressions="true" create-session="ifRequired"
		auto-config="true">
		<sec:intercept-url pattern="/" access="permitAll" />
		<sec:intercept-url pattern="/logout" access="permitAll" />
		<sec:intercept-url pattern="/exception" access="permitAll" />
		<sec:intercept-url pattern="/contactus" access="permitAll" />
		<sec:intercept-url pattern="/aboutus" access="permitAll" />
		
		<sec:intercept-url pattern="/user/**" access="permitAll" />
		<sec:intercept-url pattern="/servicerequest/**" access="permitAll" />
		<sec:intercept-url pattern="/servicereview/**" access="permitAll" />
		<sec:intercept-url pattern="/dashboard/**" access="permitAll" />
		<sec:intercept-url pattern="/serviceProvider/**" access="permitAll" />
		<sec:intercept-url pattern="/redirecturl/**" access="permitAll" />
		<sec:intercept-url pattern="/servicetype/**" access="permitAll" />
		<sec:intercept-url pattern="/uservehicle/**" access="permitAll" />
		<sec:intercept-url pattern="/loadReport/**" access="permitAll" />
		
		
		<sec:intercept-url pattern="/login" access="permitAll" />
		
		<!-- For now only for city Authentication -->
		<sec:intercept-url pattern="/city/**" access="isAuthenticated()" />
		
		<sec:session-management invalid-session-url="/login"
			session-fixation-protection="newSession">
			<sec:concurrency-control max-sessions="1"
				error-if-maximum-exceeded="true" />
		</sec:session-management>
		<sec:form-login authentication-failure-url="/login?loginError=true"
			always-use-default-target="true" default-target-url="/logged_in"
			login-processing-url="/login-process" login-page="/login" />
		<sec:logout logout-success-url="/" logout-url="/logout"
			delete-cookies="JSESSIONID" />
	</sec:http>

	<!-- our custom authentication provider, it loads the users using our dao 
		system -->
	<bean id="authenticationProvider" class="com.ucs.rsa.security.CustomAuthenticationProvider" />

	<!-- a sha-512 password encoder -->
	<bean id="sha512PasswordEncoder"
		class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
		<constructor-arg value="512" />
	</bean>

	<!-- definition of the authentication manager -->
	<sec:authentication-manager>
		<sec:authentication-provider
			user-service-ref="authenticationProvider">
			<sec:password-encoder ref="sha512PasswordEncoder"
				base64="false">
				<!-- our custom user should have a getSalt() method -->
				<sec:salt-source user-property="salt" />
			</sec:password-encoder>
		</sec:authentication-provider>
	</sec:authentication-manager>

</beans>
